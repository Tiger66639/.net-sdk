@model DreamFactory.AddressBook.Models.ContactInfoViewModel

@{
    ViewBag.Title = "Edit '" + Model.ContactInfo.InfoType + "' contact info for " + Model.ContactName;
}

<h2>@ViewBag.Title</h2>
<br />
<div class="row">
    <div class="col-md-8">
        <section id="createForm">
            @using (Html.BeginForm("Edit", "ContactInfo", FormMethod.Post, new { @class = "form-horizontal", role = "form", autocomplete = "off" }))
            {
                @Html.HiddenFor(m => m.ReturnUrl)
                @Html.HiddenFor(m => m.ContactInfo.Id)
                @Html.HiddenFor(m => m.ContactInfo.ContactId)
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.InfoType, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(m => m.InfoType, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.InfoType, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.ContactInfo.Phone, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.ContactInfo.Phone, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.ContactInfo.Phone, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.ContactInfo.Email, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.ContactInfo.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.ContactInfo.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.ContactInfo.Address, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.ContactInfo.Address, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.ContactInfo.Address, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.ContactInfo.City, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.ContactInfo.City, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.ContactInfo.City, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.ContactInfo.State, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.ContactInfo.State, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.ContactInfo.State, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.ContactInfo.Zip, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.ContactInfo.Zip, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.ContactInfo.Zip, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.ContactInfo.Country, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.ContactInfo.Country, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.ContactInfo.Country, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-primary"/>
                        <a href="@Model.ReturnUrl" class="btn btn-default">Cancel</a>
                    </div>
                </div>
            }
        </section>
    </div>
</div>